domain Natural {
  | One
  | Next { . n:Natural }
}
domain NaturalMath {
  | sum -> Natural {
    . a:Natural
    . b:Natural

    > . a=One
    $ Next( . n~b )

    > . a=Next . b=One
    $ Next( . n~a )

    > . a=Next . b=Next
    $ Next( . n~Next( . n~sum(
        . a~a/n
        . b~b/n
    )))
  }
  | fib -> Natural {
    . n:Natural                            # n-th fibonnaci number to calculate
    | fiba -> Natural {
      . n:Natural
      > .n=One $ One                       # step 3: if (n-1) is 1, then return 1
      >$ sum(.a~fib(.n~n/n) .b~fib(.n~n))  # step 4: always, return fib((n-1)-1) + fib(n-1)
    }
    > .n=One $ One                         # step 1: if n is 1, then return 1
    > .n=Next $ fiba(.n~n/n)               # step 2: if n > 1, then fiba(n-1)
  }
}