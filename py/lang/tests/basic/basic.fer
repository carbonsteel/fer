from /Prelude {
  import Natural
  i NaturalMath
}

domain Animal {
  | getLegCount -> Natural {}
}

d Monopod {
  | getLegCount -> Naturaly {
    . Naturaly ~ Natural
    >$ &One
  }
}



#d DomainMath {
#  | implements {
#    . interface:Domain
#  }
#}

d Zoologist {
  | countLegs -> Natural {
    . animal:Animal
    >$ animal/getLegCount()
  }
}

d Main {
  >$ "my str\i\ng\\\'asda@ \""
  >$ 12341
  >$ -12222.0
  >$ NaturalMath/sum(.a~Next(.n~One) .b~Next(.n~One))
}



d Abc {
  | a | b | c
}

d getAa -> Abc {
  >$ a
}

