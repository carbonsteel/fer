from /Universe/Naturals {
  i Natural
  i NaturalMath
}
from /Universe/Maybes {
  i Maybe
}
from /Universe/Comparisons {
  i Eq
  i Boolean
}

domain List {
  . Element
  | Empty
  | Node {
    . next : List( . Element ~ Element)
    . value : Element 
  }
  >$ Empty
}

d ListMath {
  . Element
  . List ~ List( . Element ~ Element)
  | sum -> List {
    . a : List
    . b : List
    > . a = Empty $ b
    > . b = Empty $ a
    >$ Node(.next~sum(.a~a/next .b~b) . value ~ a/value)
  }
}

d ListUtil {
  . Element
  . List ~ List(.Element~Element)
  . eq ~ Eq(.Element~Element)/equals
  | find -> Maybe(.Value~Element) {
    . l : List
    . e : Element
    | pred {
      .b : Boolean
      .v : Element
      > .b=True $ Just(.v~v)
    }
    | iter {
      .m : Maybe(.Value~Element)
      .k : List
      .f : Element
      > .m=Nothing $ find(.l~k .e~f)
    }
    > .l = Empty $ Nothing
    >$ iter(.m~pred(.b~eq(.a~e .b~l/value) .v~e) .l~l .e~e)
  }
}