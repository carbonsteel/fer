domain Natural {
  | One
  | Next { . n:Natural }
}
domain List {
  . Value
  | Tail { . v:Value }
  | Head { . v:Value . p:List( .Value~Value ) }
}

domain ListMath {
  | append {
    . l:List
    . v:List/Value
    >$ Head(.v~v .p~l)
}

domain NaturalMath {
  | sum {
    . a:Natural
    . b:Natural

    > . a:One
    $ Next( . n~b )

    > . a=Next . b=One
    $ Next( . n~a )

    > . a=Next . b=Next
    $ Next( . n~Next( . n~sum(
        . a~a/n
        . b~b/n
    )))
  }
 | fib {
   | onacci {
     . a:Natural
     . b:Natural
     . l:List(.Value~Natural)
     >$ ListMath/append(.v~sum(.a~a .b~b) .l~l)
   }
   | compute {
     
   }
   >$ onacci(.a~Natural/One .b~Natural/Next(.n:Natural/One) .l~List/Tail(.v~Natural/One))
 }
}

domain Main {
  >$ NaturalMath/sum(.a~Next(.n~One) .b~Next(.n~One))
}
